// Generated by Dagger (https://google.github.io/dagger).
package webkul.opencart.mobikul.dagger;

import android.content.Context;
import dagger.internal.Factory;
import javax.inject.Provider;
import org.jetbrains.annotations.Nullable;
import webkul.opencart.mobikul.networkManager.ApiInteface;

public final class AppModule_GetApiInterfaceFactory implements Factory<ApiInteface> {
  private final AppModule module;

  private final Provider<Context> mContextProvider;

  public AppModule_GetApiInterfaceFactory(AppModule module, Provider<Context> mContextProvider) {
    this.module = module;
    this.mContextProvider = mContextProvider;
  }

  @Override
  @Nullable
  public ApiInteface get() {
    return provideInstance(module, mContextProvider);
  }

  @Nullable
  public static ApiInteface provideInstance(AppModule module, Provider<Context> mContextProvider) {
    return proxyGetApiInterface(module, mContextProvider.get());
  }

  public static AppModule_GetApiInterfaceFactory create(
      AppModule module, Provider<Context> mContextProvider) {
    return new AppModule_GetApiInterfaceFactory(module, mContextProvider);
  }

  @Nullable
  public static ApiInteface proxyGetApiInterface(AppModule instance, Context mContext) {
    return instance.getApiInterface(mContext);
  }
}
